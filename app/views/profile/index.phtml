<div class="row">
    {{ partial('profile/sidebar') }}

    <div class="col-sm-12 col-lg-9">
        {{ content() }}

        {% set chunks = servers.toArray()|array_chunk(2) %}

        {% for chunk in chunks %}
        <div class="row">
            {% for server in chunk %}
            <div class="col-sm-12 col-lg-6">
                <div class="card border-0 shadow-sm mb-3">
                    <div class="card-body text-center py-5">
                        <h5 class="mb-0">{{ server['servers'].title }}</h5>

                        <p class="mb-0">
                            <span class="badge badge-primary">{{ server['servers'].server_ip }}:{{ server['servers'].server_port }}</span>
                            <span class="badge badge-primary">{{ server['games'].title }}</span>
                        </p>
                    </div>
                    <div class="card-footer text-center bg-transparent">
                        {{ link_to('servers/edit/'~server['servers'].id, 'Edit',
                            'class' : 'btn btn-primary btn-sm',
                            'style' : 'width:75px;') }}

                        {{ link_to('', 'Delete',
                            'class' : 'btn btn-danger btn-sm', 'id' : 'delete', 'data-id' : server['servers'].id,
                            'style' : 'width:75px;') }}
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>
        {% endfor %}

        {#<div class="card border-0 shadow-sm mb-3">
            <div class="card-header bg-gradient-primary" style="line-height:1em;">
                {{ link_to('servers/add',
                    '<i class="fal fa-plus-circle fa-fw"></i> Add Server',
                    'class' : 'btn btn-primary float-right') }}

                <h5 class="mb-0 text-white">My Servers</h5>
                <p class="mb-0 small text-white-50">Manage all of your servers in one place.</p>
            </div>
            <table class="table table-hover mb-0" style="line-height:1em;">
                {% for server in servers %}
                <tr>
                    <td>{{ link_to('servers/view/'~getSeoTitle(server), server.title, 'target' : '_blank') }}</td>
                    <td>
                        <p class="mb-0">{{ server.votes|number_format }}</p>
                        <small class="text-muted">Votes</small>
                    </td>
                    <td>{{ date("M. d, Y", server.date_created) }}</td>
                    <td class="text-right">
                        {{ link_to('servers/edit/'~server.id, 'Edit', 'class' : 'btn btn-outline-primary btn-sm') }}
                        {{ link_to('', 'Delete', 'class' : 'btn btn-outline-danger btn-sm', 'id' : 'delete', 'data-id' : server.id) }}
                    </td>
                </tr>
                {% endfor %}
            </table>
        </div#}
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>

<script>
    let timerInterval;

    $(document).on("click", "#delete", function(event) {
        event.preventDefault();

        var id = $(this).data("id");

        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                $.post("{{ url('servers/delete') }}", {
                    id: id,
                }, function(data) {
                    console.log(data);

                    try {
                        let json = JSON.parse(data);

                        Swal.fire({
                            title: json.success ? 'Deleted!' : 'Error',
                            html: json.message,
                            type: json.error ? 'error' : 'success',
                            timer: 2000,
                            showConfirmButton: false,
                            onBeforeOpen: () => {
                                timerInterval = setInterval(() => {}, 100)
                            },
                            onClose: () => {
                                clearInterval(timerInterval);
                                window.location.reload();
                            }
                        });
                    } catch (err) {
                        console.log(err);
                    }
                    locked = false;
                });
            } else {
                locked = false;
            }
        });
    });
</script>